// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GuideAnchor renders, advances, and finishes 1`] = `
<GuideAnchor
  target="target 1"
>
  <HovercardSuspense
    body={
      <GuideContainer>
        <GuideInputRow>
          <StyledTitle>
            title 1
          </StyledTitle>
          <CloseLink
            data-test-id="close-button"
            href="#"
            onClick={[Function]}
          >
            <CloseIcon />
          </CloseLink>
        </GuideInputRow>
        <StyledContent>
          <div
            dangerouslySetInnerHTML={
              Object {
                "__html": "abc",
              }
            }
          />
          <div
            className="css-16f1609"
          >
            <div>
              <Button
                align="center"
                disabled={false}
                onClick={[Function]}
                priority="success"
                size="small"
              >
                Next
                 â†’
              </Button>
            </div>
          </div>
        </StyledContent>
      </GuideContainer>
    }
    bodyClassName="css-dvx057-GuideAnchor-bodyClassName"
    show={true}
    tipColor="#3EA573"
  >
    <Suspense
      fallback={<span />}
    >
      <span />
    </Suspense>
  </HovercardSuspense>
</GuideAnchor>
`;

exports[`GuideAnchor renders, advances, and finishes 2`] = `
<GuideAnchor
  target="target 2"
>
  <HovercardSuspense
    body={
      <GuideContainer>
        <GuideInputRow>
          <StyledTitle>
            title 2
          </StyledTitle>
        </GuideInputRow>
        <StyledContent>
          <div
            dangerouslySetInnerHTML={
              Object {
                "__html": "xyz",
              }
            }
          />
          <div
            className="css-16f1609"
          >
            <div>
              <Button
                align="center"
                disabled={false}
                onClick={[Function]}
                priority="success"
                size="small"
              >
                Done
              </Button>
            </div>
          </div>
        </StyledContent>
      </GuideContainer>
    }
    bodyClassName="css-dvx057-GuideAnchor-bodyClassName"
    show={true}
    tipColor="#3EA573"
  >
    <Suspense
      fallback={<span />}
    >
      <Hovercard
        body={
          <GuideContainer>
            <GuideInputRow>
              <StyledTitle>
                title 2
              </StyledTitle>
            </GuideInputRow>
            <StyledContent>
              <div
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "xyz",
                  }
                }
              />
              <div
                className="css-16f1609"
              >
                <div>
                  <Button
                    align="center"
                    disabled={false}
                    onClick={[Function]}
                    priority="success"
                    size="small"
                  >
                    Done
                  </Button>
                </div>
              </div>
            </StyledContent>
          </GuideContainer>
        }
        bodyClassName="css-dvx057-GuideAnchor-bodyClassName"
        show={true}
        tipColor="#3EA573"
      >
        <Manager>
          <Reference>
            <InnerReference
              setReferenceNode={[Function]}
            >
              <span
                aria-describedby="hovercard-123456"
              >
                <span />
              </span>
            </InnerReference>
          </Reference>
          <Portal
            containerInfo={
              <div
                id="hovercard-portal"
              >
                <div
                  class="hovercard css-17wb929-StyledHovercard eochsw50"
                  style="position: absolute; top: 0px; left: 0px; opacity: 0; pointer-events: none;"
                >
                  <div
                    class="css-1oqil3e-Body-GuideAnchor-bodyClassName eochsw52"
                  >
                    <div
                      class="css-m6hbxj-GuideContainer e130o4350"
                    >
                      <div
                        class="css-pe6gi5-GuideInputRow e130o4352"
                      >
                        <div
                          class="css-1w7cm7e-StyledTitle e130o4353"
                        >
                          title 2
                        </div>
                      </div>
                      <div
                        class="css-1lbv6lb-StyledContent e130o4354"
                      >
                        <div>
                          xyz
                        </div>
                        <div
                          class="css-16f1609"
                        >
                          <div>
                            <button
                              aria-disabled="false"
                              aria-label="Done"
                              class="css-1xjdilq-StyledButton-getColors e12ma6z0"
                              role="button"
                            >
                              <span
                                class="css-1h693nz-ButtonLabel e12ma6z1"
                              >
                                Done
                              </span>
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <span
                    class="css-6jrnh6-HovercardArrow eochsw53"
                  />
                </div>
              </div>
            }
          >
            <Popper
              modifiers={
                Object {
                  "hide": Object {
                    "enabled": false,
                  },
                  "preventOverflow": Object {
                    "boundariesElement": "viewport",
                    "enabled": true,
                    "padding": 10,
                  },
                }
              }
              placement="top"
            >
              <InnerPopper
                eventsEnabled={true}
                modifiers={
                  Object {
                    "hide": Object {
                      "enabled": false,
                    },
                    "preventOverflow": Object {
                      "boundariesElement": "viewport",
                      "enabled": true,
                      "padding": 10,
                    },
                  }
                }
                placement="top"
                positionFixed={false}
                referenceElement={
                  <span
                    aria-describedby="hovercard-123456"
                  >
                    <span />
                  </span>
                }
              >
                <StyledHovercard
                  className="hovercard"
                  innerRef={[Function]}
                  style={
                    Object {
                      "left": 0,
                      "opacity": 0,
                      "pointerEvents": "none",
                      "position": "absolute",
                      "top": 0,
                    }
                  }
                  visible={true}
                  withHeader={false}
                >
                  <div
                    className="hovercard css-17wb929-StyledHovercard eochsw50"
                    style={
                      Object {
                        "left": 0,
                        "opacity": 0,
                        "pointerEvents": "none",
                        "position": "absolute",
                        "top": 0,
                      }
                    }
                  >
                    <Body
                      className="css-dvx057-GuideAnchor-bodyClassName"
                    >
                      <div
                        className="css-1oqil3e-Body-GuideAnchor-bodyClassName eochsw52"
                      >
                        <GuideContainer>
                          <div
                            className="css-m6hbxj-GuideContainer e130o4350"
                          >
                            <GuideInputRow>
                              <div
                                className="css-pe6gi5-GuideInputRow e130o4352"
                              >
                                <StyledTitle>
                                  <div
                                    className="css-1w7cm7e-StyledTitle e130o4353"
                                  >
                                    title 2
                                  </div>
                                </StyledTitle>
                              </div>
                            </GuideInputRow>
                            <StyledContent>
                              <div
                                className="css-1lbv6lb-StyledContent e130o4354"
                              >
                                <div
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "xyz",
                                    }
                                  }
                                />
                                <div
                                  className="css-16f1609"
                                >
                                  <div>
                                    <Button
                                      align="center"
                                      disabled={false}
                                      onClick={[Function]}
                                      priority="success"
                                      size="small"
                                    >
                                      <StyledButton
                                        aria-disabled={false}
                                        aria-label="Done"
                                        disabled={false}
                                        onClick={[Function]}
                                        priority="success"
                                        role="button"
                                        size="small"
                                      >
                                        <ForwardRef
                                          aria-disabled={false}
                                          aria-label="Done"
                                          className="css-1xjdilq-StyledButton-getColors e12ma6z0"
                                          disabled={false}
                                          onClick={[Function]}
                                          priority="success"
                                          role="button"
                                          size="small"
                                        >
                                          <button
                                            aria-disabled={false}
                                            aria-label="Done"
                                            className="css-1xjdilq-StyledButton-getColors e12ma6z0"
                                            onClick={[Function]}
                                            role="button"
                                            size="small"
                                          >
                                            <ButtonLabel
                                              align="center"
                                              priority="success"
                                              size="small"
                                            >
                                              <Component
                                                align="center"
                                                className="css-1h693nz-ButtonLabel e12ma6z1"
                                                priority="success"
                                                size="small"
                                              >
                                                <span
                                                  className="css-1h693nz-ButtonLabel e12ma6z1"
                                                >
                                                  Done
                                                </span>
                                              </Component>
                                            </ButtonLabel>
                                          </button>
                                        </ForwardRef>
                                      </StyledButton>
                                    </Button>
                                  </div>
                                </div>
                              </div>
                            </StyledContent>
                          </div>
                        </GuideContainer>
                      </div>
                    </Body>
                    <HovercardArrow
                      innerRef={[Function]}
                      style={Object {}}
                      tipColor="#3EA573"
                    >
                      <span
                        className="css-6jrnh6-HovercardArrow eochsw53"
                        style={Object {}}
                      />
                    </HovercardArrow>
                  </div>
                </StyledHovercard>
              </InnerPopper>
            </Popper>
          </Portal>
        </Manager>
      </Hovercard>
    </Suspense>
  </HovercardSuspense>
</GuideAnchor>
`;
